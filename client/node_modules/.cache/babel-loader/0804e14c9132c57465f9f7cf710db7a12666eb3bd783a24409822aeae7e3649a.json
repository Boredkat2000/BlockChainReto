{"ast":null,"code":"import { ethers } from 'ethers';\n\n// These would normally be loaded from built artifacts after compilation\n// For now we'll import from a JSON file\nlet VotingSystemArtifact;\ntry {\n  VotingSystemArtifact = require('../../artifacts/contracts/VotingSystem.sol/VotingSystem.json');\n} catch (error) {\n  console.error('Failed to load contract artifacts. Make sure contracts are compiled.');\n  // Fallback for development\n  VotingSystemArtifact = {\n    abi: []\n  };\n}\nexport const getContractInstance = async (provider, signerOrProvider = null) => {\n  try {\n    // Contract address would normally be loaded from environment variables or a config file\n    const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\n    if (!contractAddress) {\n      console.error('Contract address not found');\n      return null;\n    }\n\n    // Use either the provided signer/provider or the default provider\n    const contract = new ethers.Contract(contractAddress, VotingSystemArtifact.abi, signerOrProvider || provider);\n    return contract;\n  } catch (error) {\n    console.error('Error creating contract instance:', error);\n    return null;\n  }\n};\nexport const formatTimestamp = timestamp => {\n  if (!timestamp) return 'N/A';\n  return new Date(timestamp * 1000).toLocaleString();\n};\nexport const formatAddress = address => {\n  if (!address) return '';\n  return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n};\nexport const isElectionActive = election => {\n  if (!election) return false;\n  const now = Math.floor(Date.now() / 1000);\n  return election.isActive && now >= parseInt(election.startTime) && now <= parseInt(election.endTime);\n};\nexport const hasElectionEnded = election => {\n  if (!election) return false;\n  const now = Math.floor(Date.now() / 1000);\n  return !election.isActive || now > parseInt(election.endTime);\n};\nexport const canViewResults = election => {\n  if (!election) return false;\n  return election.resultsFinalized || hasElectionEnded(election);\n};","map":{"version":3,"names":["ethers","VotingSystemArtifact","require","error","console","abi","getContractInstance","provider","signerOrProvider","contractAddress","process","env","REACT_APP_CONTRACT_ADDRESS","contract","Contract","formatTimestamp","timestamp","Date","toLocaleString","formatAddress","address","substring","length","isElectionActive","election","now","Math","floor","isActive","parseInt","startTime","endTime","hasElectionEnded","canViewResults","resultsFinalized"],"sources":["C:/Users/katri/CascadeProjects/blockchain-voting-platform/client/src/utils/contractUtils.js"],"sourcesContent":["import { ethers } from 'ethers';\n\n// These would normally be loaded from built artifacts after compilation\n// For now we'll import from a JSON file\nlet VotingSystemArtifact;\n\ntry {\n  VotingSystemArtifact = require('../../artifacts/contracts/VotingSystem.sol/VotingSystem.json');\n} catch (error) {\n  console.error('Failed to load contract artifacts. Make sure contracts are compiled.');\n  // Fallback for development\n  VotingSystemArtifact = { abi: [] };\n}\n\nexport const getContractInstance = async (provider, signerOrProvider = null) => {\n  try {\n    // Contract address would normally be loaded from environment variables or a config file\n    const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\n    \n    if (!contractAddress) {\n      console.error('Contract address not found');\n      return null;\n    }\n    \n    // Use either the provided signer/provider or the default provider\n    const contract = new ethers.Contract(\n      contractAddress,\n      VotingSystemArtifact.abi,\n      signerOrProvider || provider\n    );\n    \n    return contract;\n  } catch (error) {\n    console.error('Error creating contract instance:', error);\n    return null;\n  }\n};\n\nexport const formatTimestamp = (timestamp) => {\n  if (!timestamp) return 'N/A';\n  return new Date(timestamp * 1000).toLocaleString();\n};\n\nexport const formatAddress = (address) => {\n  if (!address) return '';\n  return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n};\n\nexport const isElectionActive = (election) => {\n  if (!election) return false;\n  \n  const now = Math.floor(Date.now() / 1000);\n  return election.isActive && \n         now >= parseInt(election.startTime) && \n         now <= parseInt(election.endTime);\n};\n\nexport const hasElectionEnded = (election) => {\n  if (!election) return false;\n  \n  const now = Math.floor(Date.now() / 1000);\n  return !election.isActive || now > parseInt(election.endTime);\n};\n\nexport const canViewResults = (election) => {\n  if (!election) return false;\n  \n  return election.resultsFinalized || hasElectionEnded(election);\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;;AAE/B;AACA;AACA,IAAIC,oBAAoB;AAExB,IAAI;EACFA,oBAAoB,GAAGC,OAAO,CAAC,8DAA8D,CAAC;AAChG,CAAC,CAAC,OAAOC,KAAK,EAAE;EACdC,OAAO,CAACD,KAAK,CAAC,sEAAsE,CAAC;EACrF;EACAF,oBAAoB,GAAG;IAAEI,GAAG,EAAE;EAAG,CAAC;AACpC;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,gBAAgB,GAAG,IAAI,KAAK;EAC9E,IAAI;IACF;IACA,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;IAE9D,IAAI,CAACH,eAAe,EAAE;MACpBL,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAC;MAC3C,OAAO,IAAI;IACb;;IAEA;IACA,MAAMU,QAAQ,GAAG,IAAIb,MAAM,CAACc,QAAQ,CAClCL,eAAe,EACfR,oBAAoB,CAACI,GAAG,EACxBG,gBAAgB,IAAID,QACtB,CAAC;IAED,OAAOM,QAAQ;EACjB,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMY,eAAe,GAAIC,SAAS,IAAK;EAC5C,IAAI,CAACA,SAAS,EAAE,OAAO,KAAK;EAC5B,OAAO,IAAIC,IAAI,CAACD,SAAS,GAAG,IAAI,CAAC,CAACE,cAAc,CAAC,CAAC;AACpD,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIC,OAAO,IAAK;EACxC,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE;EACvB,OAAO,GAAGA,OAAO,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,MAAMD,OAAO,CAACC,SAAS,CAACD,OAAO,CAACE,MAAM,GAAG,CAAC,CAAC,EAAE;AAChF,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;EAC5C,IAAI,CAACA,QAAQ,EAAE,OAAO,KAAK;EAE3B,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACV,IAAI,CAACQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;EACzC,OAAOD,QAAQ,CAACI,QAAQ,IACjBH,GAAG,IAAII,QAAQ,CAACL,QAAQ,CAACM,SAAS,CAAC,IACnCL,GAAG,IAAII,QAAQ,CAACL,QAAQ,CAACO,OAAO,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIR,QAAQ,IAAK;EAC5C,IAAI,CAACA,QAAQ,EAAE,OAAO,KAAK;EAE3B,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACV,IAAI,CAACQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;EACzC,OAAO,CAACD,QAAQ,CAACI,QAAQ,IAAIH,GAAG,GAAGI,QAAQ,CAACL,QAAQ,CAACO,OAAO,CAAC;AAC/D,CAAC;AAED,OAAO,MAAME,cAAc,GAAIT,QAAQ,IAAK;EAC1C,IAAI,CAACA,QAAQ,EAAE,OAAO,KAAK;EAE3B,OAAOA,QAAQ,CAACU,gBAAgB,IAAIF,gBAAgB,CAACR,QAAQ,CAAC;AAChE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}