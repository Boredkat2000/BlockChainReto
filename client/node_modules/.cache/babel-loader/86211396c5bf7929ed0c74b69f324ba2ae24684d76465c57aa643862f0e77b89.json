{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katri\\\\CascadeProjects\\\\blockchain-voting-platform\\\\client\\\\src\\\\components\\\\elections\\\\ElectionResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Container, Card, Row, Col, Badge, Button, Alert, Spinner } from 'react-bootstrap';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title } from 'chart.js';\nimport { Pie, Bar } from 'react-chartjs-2';\nimport { formatTimestamp, canViewResults } from '../../utils/contractUtils';\nimport { validateApiUrl, safeParseInt, handleApiError, createLoadingState, updateLoadingState } from '../../utils/validationUtils';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title);\nconst ElectionResults = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [electionState, setElectionState] = useState(createLoadingState());\n  const [resultsState, setResultsState] = useState(createLoadingState());\n  useEffect(() => {\n    fetchElectionData();\n  }, [id]);\n  const fetchElectionData = async () => {\n    try {\n      setElectionState(updateLoadingState(electionState, {\n        loading: true\n      }));\n      setResultsState(updateLoadingState(resultsState, {\n        loading: true\n      }));\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      if (!validateApiUrl(apiUrl)) {\n        throw new Error('URL de API inválida');\n      }\n\n      // First, fetch the election details\n      const electionResponse = await fetch(`${apiUrl}/api/elections/${id}`);\n      const electionData = await electionResponse.json();\n      if (!(electionData !== null && electionData !== void 0 && electionData.success)) {\n        throw new Error((electionData === null || electionData === void 0 ? void 0 : electionData.message) || 'Error al obtener detalles de la elección');\n      }\n      const election = electionData.election;\n      setElectionState(updateLoadingState(electionState, {\n        data: election\n      }));\n\n      // Check if results can be viewed\n      if (!canViewResults(election)) {\n        throw new Error('Los resultados no están disponibles para esta elección');\n      }\n\n      // Then, fetch the results\n      const resultsResponse = await fetch(`${apiUrl}/api/elections/${id}/results`);\n      const resultsData = await resultsResponse.json();\n      if (!(resultsData !== null && resultsData !== void 0 && resultsData.success)) {\n        throw new Error((resultsData === null || resultsData === void 0 ? void 0 : resultsData.message) || 'Error al obtener resultados de la elección');\n      }\n      const results = resultsData;\n      setResultsState(updateLoadingState(resultsState, {\n        data: results\n      }));\n    } catch (error) {\n      const errorMessage = handleApiError(error);\n      setElectionState(updateLoadingState(electionState, {\n        error: errorMessage\n      }));\n      setResultsState(updateLoadingState(resultsState, {\n        error: errorMessage\n      }));\n    } finally {\n      setElectionState(updateLoadingState(electionState, {\n        loading: false\n      }));\n      setResultsState(updateLoadingState(resultsState, {\n        loading: false\n      }));\n    }\n  };\n  const preparePieChartData = () => {\n    var _resultsState$data;\n    if (!((_resultsState$data = resultsState.data) !== null && _resultsState$data !== void 0 && _resultsState$data.results)) return null;\n    const candidateNames = resultsState.data.results.map(candidate => candidate.name);\n    const voteCounts = resultsState.data.results.map(candidate => safeParseInt(candidate.voteCount));\n    const backgroundColors = resultsState.data.results.map((_, index) => {\n      const hue = index * 137 % 360;\n      return `hsla(${hue}, 70%, 60%, 0.7)`;\n    });\n    const borderColors = backgroundColors.map(color => color.replace('0.7', '1'));\n    return {\n      labels: candidateNames,\n      datasets: [{\n        data: voteCounts,\n        backgroundColor: backgroundColors,\n        borderColor: borderColors,\n        borderWidth: 1\n      }]\n    };\n  };\n  const prepareBarChartData = () => {\n    var _resultsState$data2;\n    if (!((_resultsState$data2 = resultsState.data) !== null && _resultsState$data2 !== void 0 && _resultsState$data2.results)) return null;\n    const candidateNames = resultsState.data.results.map(candidate => candidate.name);\n    const voteCounts = resultsState.data.results.map(candidate => safeParseInt(candidate.voteCount));\n    return {\n      labels: candidateNames,\n      datasets: [{\n        label: 'Votos',\n        data: voteCounts,\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n        borderColor: 'rgba(53, 162, 235, 1)',\n        borderWidth: 1\n      }]\n    };\n  };\n  const pieChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          boxWidth: 15,\n          padding: 15\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const value = context.raw;\n            const total = context.dataset.data.reduce((a, b) => a + b, 0);\n            const percentage = Math.round(value / total * 100);\n            return `${context.label}: ${value} votes (${percentage}%)`;\n          }\n        }\n      }\n    }\n  };\n  const barChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Distribución de Votos'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const value = context.raw;\n            const total = resultsState.data.totalVotes;\n            const percentage = Math.round(value / total * 100);\n            return `${value} votos (${percentage}%)`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Número de Votos'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Candidatos'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: [electionState.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center my-5\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        variant: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Cargando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: \"Cargando resultados de la elecci\\xF3n...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), electionState.error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-5\",\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: electionState.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: fetchElectionData,\n          children: \"Reintentar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          as: Link,\n          to: `/elections/${id}`,\n          children: \"Volver a Elecci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), electionState.data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Resultados de la Elecci\\xF3n: \", electionState.data.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fecha: \", formatTimestamp(electionState.data.startTime), \" - \", formatTimestamp(electionState.data.endTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"mb-3\",\n                children: \"Gr\\xE1fico de Pastel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), resultsState.loading && /*#__PURE__*/_jsxDEV(Spinner, {\n                animation: \"border\",\n                variant: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 44\n              }, this), resultsState.error && /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                children: resultsState.error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this), resultsState.data && /*#__PURE__*/_jsxDEV(Pie, {\n                data: preparePieChartData(),\n                options: pieChartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"mb-3\",\n                children: \"Gr\\xE1fico de Barras\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), resultsState.loading && /*#__PURE__*/_jsxDEV(Spinner, {\n                animation: \"border\",\n                variant: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 44\n              }, this), resultsState.error && /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                children: resultsState.error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), resultsState.data && /*#__PURE__*/_jsxDEV(Bar, {\n                data: prepareBarChartData(),\n                options: barChartOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"shadow-sm mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-0\",\n            children: \"Resultados Detallados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-hover\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Posici\\xF3n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Candidato\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Descripci\\xF3n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-center\",\n                    children: \"Votos\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"text-center\",\n                    children: \"Porcentaje\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: resultsState.data.results.sort((a, b) => safeParseInt(b.voteCount) - safeParseInt(a.voteCount)).map((candidate, index) => {\n                  const voteCount = safeParseInt(candidate.voteCount);\n                  const totalVotes = safeParseInt(resultsState.data.totalVotes);\n                  const percentage = voteCount / totalVotes * 100;\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: candidate.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: candidate.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"text-center\",\n                      children: voteCount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"text-center\",\n                      children: [percentage.toFixed(2), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 29\n                    }, this)]\n                  }, candidate.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"shadow-sm mt-4 bg-light\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Verificaci\\xF3n Blockchain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Todos los resultados de votaci\\xF3n est\\xE1n almacenados de manera inmutable en el blockchain y pueden ser verificados independientemente. La integridad de estos resultados est\\xE1 garantizada por prueba criptogr\\xE1fica.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: [\"Resultados actualizados: \", new Date().toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-primary\",\n              size: \"sm\",\n              children: \"Ver en Blockchain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(ElectionResults, \"7XPTS9CuFrkM1hVbyyu31L4trwo=\", false, function () {\n  return [useParams];\n});\n_c = ElectionResults;\nexport default ElectionResults;\nvar _c;\n$RefreshReg$(_c, \"ElectionResults\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","Container","Card","Row","Col","Badge","Button","Alert","Spinner","Chart","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","Title","Pie","Bar","formatTimestamp","canViewResults","validateApiUrl","safeParseInt","handleApiError","createLoadingState","updateLoadingState","jsxDEV","_jsxDEV","register","ElectionResults","_s","id","electionState","setElectionState","resultsState","setResultsState","fetchElectionData","loading","apiUrl","process","env","REACT_APP_API_URL","Error","electionResponse","fetch","electionData","json","success","message","election","data","resultsResponse","resultsData","results","error","errorMessage","preparePieChartData","_resultsState$data","candidateNames","map","candidate","name","voteCounts","voteCount","backgroundColors","_","index","hue","borderColors","color","replace","labels","datasets","backgroundColor","borderColor","borderWidth","prepareBarChartData","_resultsState$data2","label","pieChartOptions","responsive","plugins","legend","position","boxWidth","padding","tooltip","callbacks","context","value","raw","total","dataset","reduce","a","b","percentage","Math","round","barChartOptions","display","title","text","totalVotes","scales","y","beginAtZero","x","className","children","animation","role","variant","fileName","_jsxFileName","lineNumber","columnNumber","onClick","as","to","startTime","endTime","md","Body","options","Header","sort","description","toFixed","Date","toLocaleString","size","_c","$RefreshReg$"],"sources":["C:/Users/katri/CascadeProjects/blockchain-voting-platform/client/src/components/elections/ElectionResults.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Container, Card, Row, Col, Badge, Button, Alert, Spinner } from 'react-bootstrap';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title } from 'chart.js';\nimport { Pie, Bar } from 'react-chartjs-2';\nimport { formatTimestamp, canViewResults } from '../../utils/contractUtils';\nimport { validateApiUrl, safeParseInt, handleApiError, createLoadingState, updateLoadingState } from '../../utils/validationUtils';\n\n// Register ChartJS components\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title);\n\nconst ElectionResults = () => {\n  const { id } = useParams();\n  const [electionState, setElectionState] = useState(createLoadingState());\n  const [resultsState, setResultsState] = useState(createLoadingState());\n\n  useEffect(() => {\n    fetchElectionData();\n  }, [id]);\n\n  const fetchElectionData = async () => {\n    try {\n      setElectionState(updateLoadingState(electionState, { loading: true }));\n      setResultsState(updateLoadingState(resultsState, { loading: true }));\n      \n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      if (!validateApiUrl(apiUrl)) {\n        throw new Error('URL de API inválida');\n      }\n\n      // First, fetch the election details\n      const electionResponse = await fetch(`${apiUrl}/api/elections/${id}`);\n      const electionData = await electionResponse.json();\n      \n      if (!electionData?.success) {\n        throw new Error(electionData?.message || 'Error al obtener detalles de la elección');\n      }\n      \n      const election = electionData.election;\n      setElectionState(updateLoadingState(electionState, { data: election }));\n      \n      // Check if results can be viewed\n      if (!canViewResults(election)) {\n        throw new Error('Los resultados no están disponibles para esta elección');\n      }\n\n      // Then, fetch the results\n      const resultsResponse = await fetch(`${apiUrl}/api/elections/${id}/results`);\n      const resultsData = await resultsResponse.json();\n      \n      if (!resultsData?.success) {\n        throw new Error(resultsData?.message || 'Error al obtener resultados de la elección');\n      }\n      \n      const results = resultsData;\n      setResultsState(updateLoadingState(resultsState, { data: results }));\n    } catch (error) {\n      const errorMessage = handleApiError(error);\n      setElectionState(updateLoadingState(electionState, { error: errorMessage }));\n      setResultsState(updateLoadingState(resultsState, { error: errorMessage }));\n    } finally {\n      setElectionState(updateLoadingState(electionState, { loading: false }));\n      setResultsState(updateLoadingState(resultsState, { loading: false }));\n    }\n  };\n\n  const preparePieChartData = () => {\n    if (!resultsState.data?.results) return null;\n    \n    const candidateNames = resultsState.data.results.map(candidate => candidate.name);\n    const voteCounts = resultsState.data.results.map(candidate => safeParseInt(candidate.voteCount));\n    \n    const backgroundColors = resultsState.data.results.map((_, index) => {\n      const hue = (index * 137) % 360;\n      return `hsla(${hue}, 70%, 60%, 0.7)`;\n    });\n    \n    const borderColors = backgroundColors.map(color => color.replace('0.7', '1'));\n    \n    return {\n      labels: candidateNames,\n      datasets: [\n        {\n          data: voteCounts,\n          backgroundColor: backgroundColors,\n          borderColor: borderColors,\n          borderWidth: 1\n        }\n      ]\n    };\n  };\n\n  const prepareBarChartData = () => {\n    if (!resultsState.data?.results) return null;\n    \n    const candidateNames = resultsState.data.results.map(candidate => candidate.name);\n    const voteCounts = resultsState.data.results.map(candidate => safeParseInt(candidate.voteCount));\n    \n    return {\n      labels: candidateNames,\n      datasets: [\n        {\n          label: 'Votos',\n          data: voteCounts,\n          backgroundColor: 'rgba(53, 162, 235, 0.5)',\n          borderColor: 'rgba(53, 162, 235, 1)',\n          borderWidth: 1\n        }\n      ]\n    };\n  };\n\n  const pieChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'right',\n        labels: {\n          boxWidth: 15,\n          padding: 15\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const value = context.raw;\n            const total = context.dataset.data.reduce((a, b) => a + b, 0);\n            const percentage = Math.round((value / total) * 100);\n            return `${context.label}: ${value} votes (${percentage}%)`;\n          }\n        }\n      }\n    }\n  };\n\n  const barChartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Distribución de Votos'\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const value = context.raw;\n            const total = resultsState.data.totalVotes;\n            const percentage = Math.round((value / total) * 100);\n            return `${value} votos (${percentage}%)`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Número de Votos'\n        }\n      },\n      x: {\n        title: {\n          display: true,\n          text: 'Candidatos'\n        }\n      }\n    }\n  };\n\n  return (\n    <Container className=\"mt-4\">\n      {electionState.loading && (\n        <div className=\"text-center my-5\">\n          <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\n            <span className=\"visually-hidden\">Cargando...</span>\n          </Spinner>\n          <p className=\"mt-3\">Cargando resultados de la elección...</p>\n        </div>\n      )}\n\n      {electionState.error && (\n        <div className=\"my-5\">\n          <Alert variant=\"danger\">{electionState.error}</Alert>\n          <div className=\"d-flex gap-2\">\n            <Button variant=\"primary\" onClick={fetchElectionData}>Reintentar</Button>\n            <Button variant=\"outline-secondary\" as={Link} to={`/elections/${id}`}>\n              Volver a Elección\n            </Button>\n          </div>\n        </div>\n      )}\n\n      {electionState.data && (\n        <div>\n          <h2>Resultados de la Elección: {electionState.data.title}</h2>\n          <p>Fecha: {formatTimestamp(electionState.data.startTime)} - {formatTimestamp(electionState.data.endTime)}</p>\n\n          <Row>\n            <Col md={6}>\n              <Card>\n                <Card.Body>\n                  <h3 className=\"mb-3\">Gráfico de Pastel</h3>\n                  {resultsState.loading && <Spinner animation=\"border\" variant=\"primary\" />}\n                  {resultsState.error && (\n                    <Alert variant=\"danger\">{resultsState.error}</Alert>\n                  )}\n                  {resultsState.data && (\n                    <Pie \n                      data={preparePieChartData()} \n                      options={pieChartOptions}\n                    />\n                  )}\n                </Card.Body>\n              </Card>\n            </Col>\n\n            <Col md={6}>\n              <Card>\n                <Card.Body>\n                  <h3 className=\"mb-3\">Gráfico de Barras</h3>\n                  {resultsState.loading && <Spinner animation=\"border\" variant=\"primary\" />}\n                  {resultsState.error && (\n                    <Alert variant=\"danger\">{resultsState.error}</Alert>\n                  )}\n                  {resultsState.data && (\n                    <Bar \n                      data={prepareBarChartData()} \n                      options={barChartOptions}\n                    />\n                  )}\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n\n          <Card className=\"shadow-sm mt-4\">\n            <Card.Header>\n              <h5 className=\"mb-0\">Resultados Detallados</h5>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"table-responsive\">\n                <table className=\"table table-hover\">\n                  <thead>\n                    <tr>\n                      <th>Posición</th>\n                      <th>Candidato</th>\n                      <th>Descripción</th>\n                      <th className=\"text-center\">Votos</th>\n                      <th className=\"text-center\">Porcentaje</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {resultsState.data.results\n                      .sort((a, b) => safeParseInt(b.voteCount) - safeParseInt(a.voteCount))\n                      .map((candidate, index) => {\n                        const voteCount = safeParseInt(candidate.voteCount);\n                        const totalVotes = safeParseInt(resultsState.data.totalVotes);\n                        const percentage = (voteCount / totalVotes) * 100;\n                        \n                        return (\n                          <tr key={candidate.id}>\n                            <td>{index + 1}</td>\n                            <td><strong>{candidate.name}</strong></td>\n                            <td>{candidate.description}</td>\n                            <td className=\"text-center\">{voteCount}</td>\n                            <td className=\"text-center\">{percentage.toFixed(2)}%</td>\n                          </tr>\n                        );\n                      })}\n                  </tbody>\n                </table>\n              </div>\n            </Card.Body>\n          </Card>\n\n          <Card className=\"shadow-sm mt-4 bg-light\">\n            <Card.Body>\n              <h5>Verificación Blockchain</h5>\n              <p>\n                Todos los resultados de votación están almacenados de manera inmutable en el blockchain y pueden ser verificados independientemente.\n                La integridad de estos resultados está garantizada por prueba criptográfica.\n              </p>\n              <div className=\"d-flex justify-content-between align-items-center\">\n                <small className=\"text-muted\">Resultados actualizados: {new Date().toLocaleString()}</small>\n                <Button variant=\"outline-primary\" size=\"sm\">\n                  Ver en Blockchain\n                </Button>\n              </div>\n            </Card.Body>\n          </Card>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default ElectionResults;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}