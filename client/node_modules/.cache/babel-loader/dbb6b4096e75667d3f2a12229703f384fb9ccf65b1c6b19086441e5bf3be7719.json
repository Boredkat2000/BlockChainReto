{"ast":null,"code":"import { ethers } from 'ethers';\n\n// ABI simplificado del contrato VotingSystem\n// Normalmente esto vendría de los artefactos compilados, pero los incluimos directamente\n// para evitar problemas de importación fuera del directorio src\nconst VotingSystemArtifact = {\n  abi: [\n  // Eventos\n  \"event ElectionCreated(uint256 electionId, string title, uint256 startTime, uint256 endTime)\", \"event VoteCast(uint256 electionId, address voter, uint256 candidateId)\", \"event ElectionEnded(uint256 electionId, uint256 winningCandidateId)\",\n  // Funciones\n  \"function createElection(string memory _title, string memory _description, uint256 _startTime, uint256 _endTime) public returns (uint256)\", \"function addCandidate(uint256 _electionId, string memory _name, string memory _description) public\", \"function registerVoter(uint256 _electionId, address _voter) public\", \"function castVote(uint256 _electionId, uint256 _candidateId) public\", \"function endElection(uint256 _electionId) public\", \"function getElectionDetails(uint256 _electionId) public view returns (string memory, string memory, uint256, uint256, bool, uint256)\", \"function getCandidateCount(uint256 _electionId) public view returns (uint256)\", \"function getCandidate(uint256 _electionId, uint256 _candidateId) public view returns (string memory, string memory, uint256)\", \"function getVoterStatus(uint256 _electionId, address _voter) public view returns (bool, bool, uint256)\"]\n};\nexport const getContractInstance = async (provider, signerOrProvider = null) => {\n  try {\n    // Contract address would normally be loaded from environment variables or a config file\n    const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\n    if (!contractAddress) {\n      console.error('Contract address not found');\n      return null;\n    }\n\n    // Use either the provided signer/provider or the default provider\n    const contract = new ethers.Contract(contractAddress, VotingSystemArtifact.abi, signerOrProvider || provider);\n    return contract;\n  } catch (error) {\n    console.error('Error creating contract instance:', error);\n    return null;\n  }\n};\nexport const formatTimestamp = timestamp => {\n  if (!timestamp) return 'N/A';\n  return new Date(timestamp * 1000).toLocaleString();\n};\nexport const formatAddress = address => {\n  if (!address) return '';\n  return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n};\nexport const isElectionActive = election => {\n  if (!election) return false;\n  const now = Math.floor(Date.now() / 1000);\n  return election.isActive && now >= parseInt(election.startTime) && now <= parseInt(election.endTime);\n};\nexport const hasElectionEnded = election => {\n  if (!election) return false;\n  const now = Math.floor(Date.now() / 1000);\n  return !election.isActive || now > parseInt(election.endTime);\n};\nexport const canViewResults = election => {\n  if (!election) return false;\n  return election.resultsFinalized || hasElectionEnded(election);\n};","map":{"version":3,"names":["ethers","VotingSystemArtifact","abi","getContractInstance","provider","signerOrProvider","contractAddress","process","env","REACT_APP_CONTRACT_ADDRESS","console","error","contract","Contract","formatTimestamp","timestamp","Date","toLocaleString","formatAddress","address","substring","length","isElectionActive","election","now","Math","floor","isActive","parseInt","startTime","endTime","hasElectionEnded","canViewResults","resultsFinalized"],"sources":["C:/Users/katri/CascadeProjects/blockchain-voting-platform/client/src/utils/contractUtils.js"],"sourcesContent":["import { ethers } from 'ethers';\n\n// ABI simplificado del contrato VotingSystem\n// Normalmente esto vendría de los artefactos compilados, pero los incluimos directamente\n// para evitar problemas de importación fuera del directorio src\nconst VotingSystemArtifact = {\n  abi: [\n    // Eventos\n    \"event ElectionCreated(uint256 electionId, string title, uint256 startTime, uint256 endTime)\",\n    \"event VoteCast(uint256 electionId, address voter, uint256 candidateId)\",\n    \"event ElectionEnded(uint256 electionId, uint256 winningCandidateId)\",\n    \n    // Funciones\n    \"function createElection(string memory _title, string memory _description, uint256 _startTime, uint256 _endTime) public returns (uint256)\",\n    \"function addCandidate(uint256 _electionId, string memory _name, string memory _description) public\",\n    \"function registerVoter(uint256 _electionId, address _voter) public\",\n    \"function castVote(uint256 _electionId, uint256 _candidateId) public\",\n    \"function endElection(uint256 _electionId) public\",\n    \"function getElectionDetails(uint256 _electionId) public view returns (string memory, string memory, uint256, uint256, bool, uint256)\",\n    \"function getCandidateCount(uint256 _electionId) public view returns (uint256)\",\n    \"function getCandidate(uint256 _electionId, uint256 _candidateId) public view returns (string memory, string memory, uint256)\",\n    \"function getVoterStatus(uint256 _electionId, address _voter) public view returns (bool, bool, uint256)\"\n  ]\n};\n\nexport const getContractInstance = async (provider, signerOrProvider = null) => {\n  try {\n    // Contract address would normally be loaded from environment variables or a config file\n    const contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\n    \n    if (!contractAddress) {\n      console.error('Contract address not found');\n      return null;\n    }\n    \n    // Use either the provided signer/provider or the default provider\n    const contract = new ethers.Contract(\n      contractAddress,\n      VotingSystemArtifact.abi,\n      signerOrProvider || provider\n    );\n    \n    return contract;\n  } catch (error) {\n    console.error('Error creating contract instance:', error);\n    return null;\n  }\n};\n\nexport const formatTimestamp = (timestamp) => {\n  if (!timestamp) return 'N/A';\n  return new Date(timestamp * 1000).toLocaleString();\n};\n\nexport const formatAddress = (address) => {\n  if (!address) return '';\n  return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n};\n\nexport const isElectionActive = (election) => {\n  if (!election) return false;\n  \n  const now = Math.floor(Date.now() / 1000);\n  return election.isActive && \n         now >= parseInt(election.startTime) && \n         now <= parseInt(election.endTime);\n};\n\nexport const hasElectionEnded = (election) => {\n  if (!election) return false;\n  \n  const now = Math.floor(Date.now() / 1000);\n  return !election.isActive || now > parseInt(election.endTime);\n};\n\nexport const canViewResults = (election) => {\n  if (!election) return false;\n  \n  return election.resultsFinalized || hasElectionEnded(election);\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;;AAE/B;AACA;AACA;AACA,MAAMC,oBAAoB,GAAG;EAC3BC,GAAG,EAAE;EACH;EACA,6FAA6F,EAC7F,wEAAwE,EACxE,qEAAqE;EAErE;EACA,0IAA0I,EAC1I,oGAAoG,EACpG,oEAAoE,EACpE,qEAAqE,EACrE,kDAAkD,EAClD,sIAAsI,EACtI,+EAA+E,EAC/E,8HAA8H,EAC9H,wGAAwG;AAE5G,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,gBAAgB,GAAG,IAAI,KAAK;EAC9E,IAAI;IACF;IACA,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;IAE9D,IAAI,CAACH,eAAe,EAAE;MACpBI,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC3C,OAAO,IAAI;IACb;;IAEA;IACA,MAAMC,QAAQ,GAAG,IAAIZ,MAAM,CAACa,QAAQ,CAClCP,eAAe,EACfL,oBAAoB,CAACC,GAAG,EACxBG,gBAAgB,IAAID,QACtB,CAAC;IAED,OAAOQ,QAAQ;EACjB,CAAC,CAAC,OAAOD,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMG,eAAe,GAAIC,SAAS,IAAK;EAC5C,IAAI,CAACA,SAAS,EAAE,OAAO,KAAK;EAC5B,OAAO,IAAIC,IAAI,CAACD,SAAS,GAAG,IAAI,CAAC,CAACE,cAAc,CAAC,CAAC;AACpD,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIC,OAAO,IAAK;EACxC,IAAI,CAACA,OAAO,EAAE,OAAO,EAAE;EACvB,OAAO,GAAGA,OAAO,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,MAAMD,OAAO,CAACC,SAAS,CAACD,OAAO,CAACE,MAAM,GAAG,CAAC,CAAC,EAAE;AAChF,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;EAC5C,IAAI,CAACA,QAAQ,EAAE,OAAO,KAAK;EAE3B,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACV,IAAI,CAACQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;EACzC,OAAOD,QAAQ,CAACI,QAAQ,IACjBH,GAAG,IAAII,QAAQ,CAACL,QAAQ,CAACM,SAAS,CAAC,IACnCL,GAAG,IAAII,QAAQ,CAACL,QAAQ,CAACO,OAAO,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIR,QAAQ,IAAK;EAC5C,IAAI,CAACA,QAAQ,EAAE,OAAO,KAAK;EAE3B,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACV,IAAI,CAACQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;EACzC,OAAO,CAACD,QAAQ,CAACI,QAAQ,IAAIH,GAAG,GAAGI,QAAQ,CAACL,QAAQ,CAACO,OAAO,CAAC;AAC/D,CAAC;AAED,OAAO,MAAME,cAAc,GAAIT,QAAQ,IAAK;EAC1C,IAAI,CAACA,QAAQ,EAAE,OAAO,KAAK;EAE3B,OAAOA,QAAQ,CAACU,gBAAgB,IAAIF,gBAAgB,CAACR,QAAQ,CAAC;AAChE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}